[2023-03-24 21:00:03,648] INFO [Controller id=0] New topics: [Set(output)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output,Some(K8T9uH2oTBGFLjYzHbVKRg),Map(output-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-24 21:00:03,649] INFO [Controller id=0] New partition creation callback for output-0 (kafka.controller.KafkaController)
[2023-03-24 21:04:53,510] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-24 21:04:53,511] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-24 21:04:53,516] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-24 21:04:53,516] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-24 21:08:12,349] DEBUG [Controller id=0] Delete topics listener fired for topics input to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:08:12,351] INFO [Controller id=0] Starting topic deletion for topics input (kafka.controller.KafkaController)
[2023-03-24 21:08:12,357] INFO [Topic Deletion Manager 0] Handling deletion for topics input (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:12,360] INFO [Topic Deletion Manager 0] Deletion of topic input (re)started (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:12,525] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(input-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-24 21:08:12,531] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:12,534] INFO [Topic Deletion Manager 0] Handling deletion for topics input (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:12,600] INFO [Topic Deletion Manager 0] Deletion of topic input successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:12,604] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-24 21:08:12,607] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:08:16,606] DEBUG [Controller id=0] Delete topics listener fired for topics output to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:08:16,606] INFO [Controller id=0] Starting topic deletion for topics output (kafka.controller.KafkaController)
[2023-03-24 21:08:16,607] INFO [Topic Deletion Manager 0] Handling deletion for topics output (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:16,607] INFO [Topic Deletion Manager 0] Deletion of topic output (re)started (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:16,648] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(output-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-24 21:08:16,648] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:16,650] INFO [Topic Deletion Manager 0] Handling deletion for topics output (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:16,691] INFO [Topic Deletion Manager 0] Deletion of topic output successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-24 21:08:16,695] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-24 21:08:16,698] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:08:21,951] INFO [Controller id=0] New topics: [Set(input)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input,Some(Ty--OlC9R4qdHyPD2XYcvQ),Map(input-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-24 21:08:21,951] INFO [Controller id=0] New partition creation callback for input-0 (kafka.controller.KafkaController)
[2023-03-24 21:08:25,874] INFO [Controller id=0] New topics: [Set(output)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output,Some(5o_gh36zRbC8I7Kc4Appsw),Map(output-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-24 21:08:25,875] INFO [Controller id=0] New partition creation callback for output-0 (kafka.controller.KafkaController)
[2023-03-24 21:09:53,517] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-24 21:09:53,517] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-24 21:09:53,520] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-24 21:09:53,520] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-24 21:14:53,521] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-24 21:14:53,521] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-24 21:14:53,524] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-24 21:14:53,525] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-24 21:18:36,681] DEBUG [Controller id=0] Delete topics listener fired for topics input to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:18:36,681] INFO [Controller id=0] Starting topic deletion for topics input (kafka.controller.KafkaController)
[2023-03-24 21:18:36,681] INFO [Topic Deletion Manager 0] Handling deletion for topics input (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:36,682] INFO [Topic Deletion Manager 0] Deletion of topic input (re)started (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:36,693] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-03-24 21:18:36,728] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(input-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-24 21:18:36,730] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:36,732] INFO [Topic Deletion Manager 0] Handling deletion for topics input (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:36,782] INFO [Topic Deletion Manager 0] Deletion of topic input successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:36,786] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-24 21:18:36,789] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:18:40,560] DEBUG [Controller id=0] Delete topics listener fired for topics output to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:18:40,560] INFO [Controller id=0] Starting topic deletion for topics output (kafka.controller.KafkaController)
[2023-03-24 21:18:40,560] INFO [Topic Deletion Manager 0] Handling deletion for topics output (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:40,561] INFO [Topic Deletion Manager 0] Deletion of topic output (re)started (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:40,600] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(output-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-24 21:18:40,601] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:40,601] INFO [Topic Deletion Manager 0] Handling deletion for topics output (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:40,640] INFO [Topic Deletion Manager 0] Deletion of topic output successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-24 21:18:40,643] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-24 21:18:40,646] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:18:46,124] INFO [Controller id=0] New topics: [Set(input)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(input,Some(38oTgYBsTOCKtwihphdMpA),Map(input-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-24 21:18:46,124] INFO [Controller id=0] New partition creation callback for input-0 (kafka.controller.KafkaController)
[2023-03-24 21:18:50,153] INFO [Controller id=0] New topics: [Set(output)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(output,Some(DZVKy-uuTrevGN6aL_mGKg),Map(output-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-03-24 21:18:50,154] INFO [Controller id=0] New partition creation callback for output-0 (kafka.controller.KafkaController)
[2023-03-24 21:19:53,525] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-03-24 21:19:53,525] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-03-24 21:19:53,528] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2023-03-24 21:19:53,528] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2023-03-24 21:22:43,789] DEBUG [Controller id=0] Delete topics listener fired for topics input to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:22:43,790] INFO [Controller id=0] Starting topic deletion for topics input (kafka.controller.KafkaController)
[2023-03-24 21:22:43,790] INFO [Topic Deletion Manager 0] Handling deletion for topics input (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:43,790] INFO [Topic Deletion Manager 0] Deletion of topic input (re)started (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:43,832] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(input-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-24 21:22:43,833] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=input,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:43,834] INFO [Topic Deletion Manager 0] Handling deletion for topics input (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:43,871] INFO [Topic Deletion Manager 0] Deletion of topic input successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:43,874] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-24 21:22:43,876] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:22:47,758] DEBUG [Controller id=0] Delete topics listener fired for topics output to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:22:47,758] INFO [Controller id=0] Starting topic deletion for topics output (kafka.controller.KafkaController)
[2023-03-24 21:22:47,758] INFO [Topic Deletion Manager 0] Handling deletion for topics output (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:47,759] INFO [Topic Deletion Manager 0] Deletion of topic output (re)started (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:47,792] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(output-0 -> NONE) (kafka.controller.KafkaController)
[2023-03-24 21:22:47,792] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=output,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:47,793] INFO [Topic Deletion Manager 0] Handling deletion for topics output (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:47,831] INFO [Topic Deletion Manager 0] Deletion of topic output successfully completed (kafka.controller.TopicDeletionManager)
[2023-03-24 21:22:47,834] INFO [Controller id=0] New topics: [Set()], deleted topics: [HashSet()], new partition replica assignment [Set()] (kafka.controller.KafkaController)
[2023-03-24 21:22:47,836] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2023-03-24 21:22:54,838] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2023-03-24 21:22:54,839] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-03-24 21:22:54,839] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2023-03-24 21:22:54,852] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-03-24 21:22:55,236] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-03-24 21:22:55,237] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-03-24 21:22:55,237] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-03-24 21:22:55,238] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2023-03-24 21:22:55,239] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2023-03-24 21:22:55,244] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2023-03-24 21:22:55,245] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2023-03-24 21:22:55,247] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2023-03-24 21:22:55,248] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2023-03-24 21:22:55,248] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2023-03-24 21:22:55,253] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
